@use "sass:map";

@import "palettes/info-vars";

@each $palette in $palettes {

	// ========================================|
	// 1. BASIC                                |
	// ========================================|
	.hustle-palette--#{"" + $palette} {

		.hustle-info {

			.hustle-layout {

				// ELEMENT: Image container BG
				.hustle-image {
					background-color: map.get($image-container, $palette);
				}
			}

			&.hustle-info--default,
			&.hustle-info--compact {

				// ELEMENT: Main background
				.hustle-layout {
					background-color: map.get($main-background, $palette);
				}
			}

			&.hustle-info--stacked {

				// ELEMENT: Main background
				.hustle-layout-body {
					background-color: map.get($main-background, $palette);
				}
			}
		}
	}

	// ========================================|
	// 2. CONTENT                              |
	// ========================================|
	.hustle-palette--#{"" + $palette} {

		.hustle-info {

			.hustle-layout {

				// ELEMENT: Title color
				.hustle-title {
					color: map.get($title-color, $palette);
				}

				// ELEMENT: Subtitle color
				.hustle-subtitle {
					color: map.get($subtitle-color, $palette);
				}

				.hustle-group-content {

					// ELEMENT: Content color
					&, * {
						color: map.get($content-color, $palette);
					}

					// ELEMENT: Link color
					a {

						&,
						&:visited {
							color: map.get($link-color-static, $palette);
						}

						&:hover {
							color: map.get($link-color-hover, $palette);
						}

						&:focus,
						&:active {
							color: map.get($link-color-active, $palette);
						}
					}

					// ELEMENT: OL counter
					ol li:before {
						color: map.get($ol-counter, $palette);
					}

					// ELEMENT: UL bullets
					ul li:before {
						background-color: map.get($ul-bullets, $palette);
					}

					// ELEMENT: Blockquote border
					blockquote {
						border-left-color: map.get($blockquote-border, $palette);
					}
				}
			}
		}
	}

	// ========================================|
	// 3. CALL TO ACTION                       |
	// ========================================|
	.hustle-palette--#{"" + $palette} {

		.hustle-info {

			.hustle-layout {

				.hustle-button-cta {
					border-width: 0;
					border-style: solid;
					border-color: transparent;

					&,
					&:visited {
						background-color: map.get($cta-background-static, $palette);
						color: map.get($cta-label-static, $palette);
					}

					&:hover {
						background-color: map.get($cta-background-hover, $palette);
						color: map.get($cta-label-hover, $palette);
					}

					&:focus,
					&:active {
						background-color: map.get($cta-background-active, $palette);
						color: map.get($cta-label-active, $palette);
					}
				}
			}
		}
	}

	// ========================================|
	// 4. GDPR CHECKBOX                        |
	// ========================================|
	.hustle-palette--#{"" + $palette} {

		.hustle-info {

			.hustle-layout {

				.hustle-checkbox {

					input:checked {

						+ span[aria-hidden] {
							background-color: map.get($checkbox-background-checked, $palette);

							&:before {
								color: map.get($checkbox-icon, $palette);
							}
						}
					}

					span[aria-hidden] {
						border-width: 2px;
						border-style: solid;
						border-color: transparent;
						background-color: map.get($checkbox-background-static, $palette);
					}

					span:not([aria-hidden]) {
						color: map.get($checkbox-label, $palette);
					}

					&.hustle-field-error {

						span[aria-hidden] {
							background-color: map.get($checkbox-background-error, $palette);
							border-color: map.get($checkbox-border-error, $palette);
						}
					}
				}
			}
		}
	}

	// ========================================|
	// 5. ADDITIONAL SETTINGS                  |
	// ========================================|
	.hustle-palette--#{"" + $palette} {

		&.hustle-popup {

			// Pop-up mask
			.hustle-info-mask {
				background-color: map.get($popup-mask, $palette);
			}
		}

		// ELEMENT: Never See Link
		.hustle-nsa-link a:not(.sui-button) {
			color: map.get($nsa-color-static, $palette);

			&:hover {
				color: map.get($nsa-color-hover, $palette);
			}

			&:active {
				color: map.get($nsa-color-active, $palette);
			}
		}
	}
}