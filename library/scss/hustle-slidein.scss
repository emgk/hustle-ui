@use "sass:map";

@import "variables";

@import "mixins/main-class";
@import "mixins/breakpoints";
@import "mixins/browsers";
@import "mixins/opacity";

// Intro animations.
@keyframes showFromRight {
	from {
		transform: translateX(110%);
		visibility: visible;
	}
	to {
		transform: translateX(0);
	}
}

@keyframes showFromLeft {
	from {
		transform: translateX(-110%);
		visibility: visible;
	}
	to {
		transform: translateX(0);
	}
}

@keyframes showFromTopCenter {
	from {
		transform: translateX(-50%) translateY(-110%);
		visibility: visible;
	}
	to {
		transform: translateX(-50%) translateY(0);
	}
}

@keyframes showFromRightCenter {
	from {
		transform: translateX(110%) translateY(-50%);
		visibility: visible;
	}
	to {
		transform: translateX(0) translateY(-50%);
	}
}

@keyframes showFromBottomCenter {
	from {
		transform: translateX(-50%) translateY(110%);
		visibility: visible;
	}
	to {
		transform: translateX(-50%) translateY(0);
	}
}

@keyframes showFromLeftCenter {
	from {
		transform: translateX(-110%) translateY(-50%);
		visibility: visible;
	}
	to {
		transform: translateX(0) translateY(-50%);
	}
}

// Outro animations.
@keyframes hideToRight {
	from {
		transform: translateX(0);
		visibility: visible;
	}
	to {
		transform: translateX(110%);
	}
}

@keyframes hideToLeft {
	from {
		transform: translateX(0);
		visibility: visible;
	}
	to {
		transform: translateX(-110%);
	}
}

@keyframes hideToTopCenter {
	from {
		transform: translateX(-50%) translateY(0);
	}
	to {
		visibility: hidden;
		transform: translateX(-50%) translateY(-110%);
	}
}

@keyframes hideToRightCenter {
	from {
		transform: translateX(0) translateY(-50%);
		visibility: visible;
	}
	to {
		transform: translateX(110%) translateY(-50%);
	}
}

@keyframes hideToBottomCenter {
	from {
		transform: translateX(-50%) translateY(0);
	}
	to {
		visibility: hidden;
		transform: translateX(-50%) translateY(110%);
	}
}

@keyframes hideToLeftCenter {
	from {
		transform: translateX(0) translateY(-50%);
		visibility: visible;
	}
	to {
		transform: translateX(-110%) translateY(-50%);
	}
}

@include hui-class(slidein, null, null, false) {
	width: 100%;
	height: 100%;
	min-height: 0;
	max-height: 100%;
	visibility: hidden;
	pointer-events: none;
	user-select: auto;
	position: fixed;
	z-index: map.get($module, z-index);
	top: 0;
	left: 0;
	padding-top: map.get($module-close, button-size);

	.hustle-slidein-content {
		width: auto;
		max-width: 100%;
		min-height: 0;
		max-height: 100%;
		overflow: visible;
		@include opacity(0);
		position: absolute;
		margin: auto;
		animation-duration: 0.5s;
		animation-fill-mode: both;
		transform-origin: center;
		transform-style: preserve-3d;

		> [class*="hustle-"] {
			max-width: map.get($module, max-width);
			max-height: calc(100vh - #{map.get($module-close, button-size)});
			padding: 0;
			overflow: auto;
		}
	}

	// Correctly position slide-in.
	&.hustle-slidein-position {

		// 1. North
		&--north {
			padding-right: map.get($gutter, default);
			padding-left: map.get($gutter, default);

			.hustle-slidein-content {
				top: map.get($module-close, button-size);
				left: 50%;
				transform: translateX(-50%);

				&.hustle-animate-in {
					@include opacity(1);
					animation-name: showFromTopCenter;
				}

				&.hustle-animate-out {
					@include opacity(1);
					animation-name: hideToTopCenter;
				}

				> [class*="hustle-"] {
					width: calc(100vw - #{map.get($gutter, default) * 2});

					@include media(max-width, sm) {
						width: calc(100vw - #{map.get($gutter, small) * 2});
					}
				}
			}

			@include media(max-width, sm) {
				padding-right: map.get($gutter, small);
				padding-left: map.get($gutter, small);
			}
		}

		// 2. South
		&--south {
			padding-right: map.get($gutter, default);
			padding-left: map.get($gutter, default);

			.hustle-slidein-content {
				left: 50%;
				transform: translateX(-50%);

				&.hustle-animate-in {
					@include opacity(1);
					animation-name: showFromBottomCenter;
				}

				&.hustle-animate-out {
					@include opacity(1);
					animation-name: hideToBottomCenter;
				}

				> [class*="hustle-"] {
					width: calc(100vw - #{map.get($gutter, default) * 2});

					@include media(max-width, sm) {
						width: calc(100vw - #{map.get($gutter, small) * 2});
					}
				}
			}

			@include media(max-width, sm) {
				padding-right: map.get($gutter, small);
				padding-left: map.get($gutter, small);
			}
		}

		// 3. East
		&--east {
			padding-left: map.get($gutter, default);

			.hustle-slidein-content {
				top: 50%;
				right: 0;
				transform: translateY(-50%);

				&.hustle-animate-in {
					@include opacity(1);
					animation-name: showFromRightCenter;
				}

				&.hustle-animate-out {
					@include opacity(1);
					animation-name: hideToRightCenter;
				}

				> [class*="hustle-"] {
					width: calc(100vw - #{map.get($gutter, default)});

					@include media(max-width, sm) {
						width: calc(100vw - #{map.get($gutter, small)});
					}
				}
			}

			@include media(max-width, sm) {
				padding-left: map.get($gutter, small);
			}
		}

		// 4. West
		&--west {
			padding-right: map.get($gutter, default);

			.hustle-slidein-content {
				top: 50%;
				left: 0;
				transform: translateY(-50%);

				&.hustle-animate-in {
					@include opacity(1);
					animation-name: showFromLeftCenter;
				}

				&.hustle-animate-out {
					@include opacity(1);
					animation-name: hideToLeftCenter;
				}

				> [class*="hustle-"] {
					width: calc(100vw - #{map.get($gutter, default)});

					@include media(max-width, sm) {
						width: calc(100vw - #{map.get($gutter, small)});
					}
				}
			}

			@include media(max-width, sm) {
				padding-right: map.get($gutter, small);
			}
		}

		// 5. North East
		&--north-east {
			padding-left: map.get($gutter, default);

			.hustle-slidein-content {
				top: map.get($module-close, button-size);
				right: 0;

				&.hustle-animate-in {
					@include opacity(1);
					animation-name: showFromRight;
				}

				&.hustle-animate-out {
					@include opacity(1);
					animation-name: hideToRight;
				}

				> [class*="hustle-"] {
					width: calc(100vw - #{map.get($gutter, default)});

					@include media(max-width, sm) {
						width: calc(100vw - #{map.get($gutter, small)});
					}
				}
			}

			@include media(max-width, sm) {
				padding-left: map.get($gutter, small);
			}
		}

		// 6. North West
		&--north-west {
			padding-right: map.get($gutter, default);

			.hustle-slidein-content {
				top: map.get($module-close, button-size);
				left: 0;

				&.hustle-animate-in {
					@include opacity(1);
					animation-name: slideInLeft;
				}

				&.hustle-animate-out {
					@include opacity(1);
					animation-name: slideOutLeft;
				}

				> [class*="hustle-"] {
					width: calc(100vw - #{map.get($gutter, default)});

					@include media(max-width, sm) {
						width: calc(100vw - #{map.get($gutter, small)});
					}
				}
			}

			@include media(max-width, sm) {
				padding-right: map.get($gutter, small);
			}
		}

		// 7. South East
		&--south-east {
			padding-left: map.get($gutter, default);

			.hustle-slidein-content {
				right: 0;

				&.hustle-animate-in {
					@include opacity(1);
					animation-name: showFromRight;
				}

				&.hustle-animate-out {
					@include opacity(1);
					animation-name: hideToRight;
				}

				> [class*="hustle-"] {
					width: calc(100vw - #{map.get($gutter, default)});

					@include media(max-width, sm) {
						width: calc(100vw - #{map.get($gutter, small)});
					}
				}
			}

			@include media(max-width, sm) {
				padding-left: map.get($gutter, small);
			}
		}

		// 8. South West
		&--south-west {
			padding-right: map.get($gutter, default);

			.hustle-slidein-content {
				left: 0;

				&.hustle-animate-in {
					@include opacity(1);
					animation-name: showFromLeft;
				}

				&.hustle-animate-out {
					@include opacity(1);
					animation-name: hideToLeft;
				}

				> [class*="hustle-"] {
					width: calc(100vw - #{map.get($gutter, default)});

					@include media(max-width, sm) {
						width: calc(100vw - #{map.get($gutter, small)});
					}
				}
			}

			@include media(max-width, sm) {
				padding-right: map.get($gutter, small);
			}
		}
	}

	&.hustle-show {
		visibility: visible;

		.hustle-slidein-content {
			pointer-events: visible;
		}
	}
}